!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([,function(e,t){var r;!function(e){e.EntityOpertion=class{constructor(e,t=!1,r=""){this.id=e,this.isSuccess=t,this.error=r}};class t{constructor(e,t,r,n,o=new Date(Date.now()),i=o){this.primaryKey=e,this.code=t,this.value=r,this.description=n,this.dateCreate=o,this.dateUpdate=i}}e.RecDefinition=t;let r=(()=>{class e{constructor(e){this._name=e}static get instance(){return this._instance}static Create(t="FirstWebDB"){e._instance||(this._instance=new e(t))}get db(){if(this._db)return this._db;throw this._name+": IndexedDB was not open!"}Open(e){if(!window.indexedDB)throw"This browser does not support IndexedDB";this._openRequest=indexedDB.open(this._name,1),this._openRequest.onupgradeneeded=e=>{this.OnOpenUpgradeNeeded(e)},this._openRequest.onsuccess=t=>{this.OnOpenSuccess(t,e)},this._openRequest.onerror=e=>{this.OnOpenError(e)}}AddDicDefinition(t,r,n){let o=this.db.transaction(e.objDefinitions,"readwrite").objectStore(e.objDefinitions).add({code:t.code,value:t.value,description:t.description,dateCreate:t.dateCreate,dateUpdate:t.dateUpdate});o.onsuccess=()=>{r(!0)},o.onerror=()=>{n(`Error ${o.error.code}-${o.error.name}\n${o.error.message}`)}}UpdateDicDefinition(t,r,n){let o=this.db.transaction(e.objDefinitions,"readwrite").objectStore(e.objDefinitions).put({primaryKey:t.primaryKey,code:t.code,value:t.value,description:t.description,dateCreate:t.dateCreate,dateUpdate:t.dateUpdate});o.onsuccess=()=>{r(!0)},o.onerror=()=>{n(`Error ${o.error.code}-${o.error.name}\n${o.error.message}`)}}LoadDicDefinition(t,r){let n=this.db.transaction(e.objDefinitions).objectStore(e.objDefinitions).openCursor();n.onsuccess=e=>{this.OnLoad(e,t,r)},n.onerror=()=>{throw`Error ${n.error.code}-${n.error.name}\n${n.error.message}`}}RemoveDicDefinition(t,r,n){let o=this.db.transaction(e.objDefinitions,"readwrite").objectStore(e.objDefinitions),i=0;for(let e of t){let s=o.delete(e.id);s.onsuccess=()=>{e.isSuccess=!0,i++,i==t.length&&r(!0)},s.onerror=()=>{e.isSuccess=!1,e.error=`Error ${s.error.code}-${s.error.name}\n${s.error.message}`,n(e.error)}}}OnOpenUpgradeNeeded(e){switch(this._db=e.target.result,this._db.version){case 1:this.DBInitOne()}}DBInitOne(){let e=this._db.createObjectStore("Definitions",{keyPath:"primaryKey",autoIncrement:!0});e.createIndex("code_idx","code",{unique:!0}),e.createIndex("value-idx","value",{unique:!0})}OnOpenSuccess(e,t){this._db=e.target.result,t(!0)}OnOpenError(e){throw`Error ${this._openRequest.error.code}-${this._openRequest.error.name}\n${this._openRequest.error.message}`}OnLoad(e,r,n){let o=event.target.result;o?(r.push(new t(o.value.primaryKey,o.value.code,o.value.value,o.value.description,o.value.dateCreate,o.value.dateUpdate)),o.continue()):n(!0)}}return e.objDefinitions="Definitions",e._instance=void 0,e})();e.Source=r}(r||(r={}))}]);